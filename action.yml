name: "Cached Checkout with Artifacts"
description: "Caches and checks out the repository using artifacts."
author: pi-xcels

inputs:
  repository:
    description: 'Repository name and owner in the format "owner/repo". Defaults to the current repository.'
    required: false
    default: ${{ github.repository }}
  ref:
    description: "The branch, tag or SHA to checkout. Defaults to the current ref."
    required: false
    default: ${{ github.ref }}
  path:
    description: "Path to checkout the repository into. Defaults to ./checkout."
    required: false
    default: "checkout"
  token:
    description: "Token to use for checkout (e.g., github.token). Required if repository is private."
    required: false
    default: ${{ github.token }}

outputs:
  cache-hit:
    description: "Boolean indicating if the checkout artifact was restored."
    value: ${{ steps.check-artifact.outputs.restored }}

runs:
  using: "composite"
  steps:
    - name: Try to download cached artifact
      id: restore
      uses: actions/download-artifact@v4
      continue-on-error: true
      with:
        name: pixcels-checkout-${{ github.sha }}
        path: ${{ inputs.path }}

    - name: Check if artifact was restored
      id: check-artifact
      shell: bash
      run: |
        if [ "$(ls -A '${{ inputs.path }}' 2>/dev/null)" ]; then
          echo "restored=true" >> $GITHUB_OUTPUT
        else
          echo "restored=false" >> $GITHUB_OUTPUT
        fi

    - name: Checkout repository (if artifact not restored)
      if: steps.check-artifact.outputs.restored != 'true'
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}
        token: ${{ inputs.token }}
        path: ${{ inputs.path }}
        fetch-depth: 0

    - name: Upload artifact (if checkout happened)
      if: steps.check-artifact.outputs.restored != 'true'
      uses: actions/upload-artifact@v4
      with:
        name: pixcels-checkout-${{ github.sha }}
        path: ${{ inputs.path }}
        retention-days: 1
        compression-level: 9

    - name: Move contents to root
      shell: bash
      run: |
        echo "Moving contents of ${{ inputs.path }} to ./"
        cp -a "${{ inputs.path }}/." ./
        rm -rf "${{ inputs.path }}"

    - name: Check for expected files
      shell: bash
      run: |
        echo "Checking for .github/actions/netbird-connect/action.yml"
        if [ -f ".github/actions/netbird-connect/action.yml" ]; then
          echo "action.yml found!"
        else
          echo "action.yml NOT found."
          echo "Contents of .github/actions:"
          ls -al .github/actions
          echo "Contents of .github/actions/netbird-connect:"
          ls -al .github/actions/netbird-connect || echo "(directory missing)"
        fi
